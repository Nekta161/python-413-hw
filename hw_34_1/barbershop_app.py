import sqlite3
from typing import List, Tuple

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
DB_PATH = "barbershop.db"
SQL_PATH = "setup_database.sql"


def read_sql_file(filepath: str) -> str:
    """
    –ß–∏—Ç–∞–µ—Ç SQL-—Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.
    """
    with open(filepath, "r", encoding="utf-8") as f:
        return f.read()


def execute_script(conn, script: str) -> None:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç SQL-—Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ –∫—É—Ä—Å–æ—Ä –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è.
    """
    cursor = conn.cursor()
    cursor.executescript(script)
    conn.commit()


def find_appointment_by_phone(conn, phone: str) -> List[Tuple]:
    """
    –ò—â–µ—Ç –∑–∞–ø–∏—Å–∏ –ø–æ —Ç–æ—á–Ω–æ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: (–∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω, –º–∞—Å—Ç–µ—Ä, —É—Å–ª—É–≥–∏, —Å—Ç–∞—Ç—É—Å, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π)
    """
    cursor = conn.cursor()
    cursor.execute(
        """
        SELECT 
            a.name,
            a.phone,
            m.first_name || ' ' || m.last_name AS master,
            GROUP_CONCAT(s.title, ', ') AS services,
            a.status,
            a.comment
        FROM Appointments a
        JOIN Masters m ON a.master_id = m.id
        JOIN appointments_services aps ON a.id = aps.appointment_id
        JOIN Services s ON aps.service_id = s.id
        WHERE a.phone = ?
        GROUP BY a.id
    """,
        (phone,),
    )
    return cursor.fetchall()


def find_appointment_by_comment(conn, comment_part: str) -> List[Tuple]:
    """
    –ò—â–µ—Ç –∑–∞–ø–∏—Å–∏, –≥–¥–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É.
    """
    cursor = conn.cursor()
    safe_part = comment_part.replace("%", "\\%").replace("_", "\\_")
    pattern = f"%{safe_part}%"
    cursor.execute(
        """
        SELECT 
            a.name,
            a.phone,
            m.first_name || ' ' || m.last_name AS master,
            GROUP_CONCAT(s.title, ', ') AS services,
            a.status,
            a.comment
        FROM Appointments a
        JOIN Masters m ON a.master_id = m.id
        JOIN appointments_services aps ON a.id = aps.appointment_id
        JOIN Services s ON aps.service_id = s.id
        WHERE a.comment LIKE ? ESCAPE '\\'
        GROUP BY a.id
    """,
        (pattern,),
    )
    return cursor.fetchall()


def create_appointment(
    conn,
    client_name: str,
    client_phone: str,
    master_name: str,
    services_list: List[str],
    comment: str = None,
) -> int:
    """
    –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID –∑–∞–ø–∏—Å–∏.
    """
    cursor = conn.cursor()

    # –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏
    first_name = master_name.strip().split()[0]
    cursor.execute("SELECT id FROM Masters WHERE first_name = ?", (first_name,))
    master = cursor.fetchone()
    if not master:
        raise ValueError(f"–ú–∞—Å—Ç–µ—Ä —Å –∏–º–µ–Ω–µ–º {first_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    master_id = master[0]

    # –í—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
    cursor.execute(
        """
        INSERT INTO Appointments (name, phone, master_id, status, comment)
        VALUES (?, ?, ?, '–æ–∂–∏–¥–∞–µ—Ç', ?)
    """,
        (client_name, client_phone, master_id, comment),
    )
    appointment_id = cursor.lastrowid

    # –ü—Ä–∏–≤—è–∑–∞—Ç—å —É—Å–ª—É–≥–∏
    for title in services_list:
        cursor.execute("SELECT id FROM Services WHERE title = ?", (title,))
        service = cursor.fetchone()
        if not service:
            raise ValueError(f"–£—Å–ª—É–≥–∞ '{title}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        service_id = service[0]
        cursor.execute(
            """
            INSERT OR IGNORE INTO appointments_services (appointment_id, service_id)
            VALUES (?, ?)
        """,
            (appointment_id, service_id),
        )

    conn.commit()
    return appointment_id


# === –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ===
if __name__ == "__main__":
    with sqlite3.connect(DB_PATH) as conn:
        sql = read_sql_file(SQL_PATH)
        execute_script(conn, sql)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")

        print("\nüîç –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +79111111111:")
        for row in find_appointment_by_phone(conn, "+79111111111"):
            print(row)

        print("\nüîç –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è '—Å—Ä–æ—á–Ω–æ':")
        for row in find_appointment_by_comment(conn, "—Å—Ä–æ—á–Ω–æ"):
            print(row)

        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:")
        try:
            new_id = create_appointment(
                conn=conn,
                client_name="–ï–≤–≥–µ–Ω–∏–π",
                client_phone="+79555555555",
                master_name="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
                services_list=["–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞", "–£–∫–ª–∞–¥–∫–∞"],
                comment="–°—Ä–æ—á–Ω–æ, –¥–æ –≤—Å—Ç—Ä–µ—á–∏ —Å –Ω–∞—á–∞–ª—å—Å—Ç–≤–æ–º",
            )
            print(f"‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: ID={new_id}")
        except ValueError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:")
        for row in find_appointment_by_phone(conn, "+79555555555"):
            print(row)
